{"version":3,"sources":["components/Container/Container.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","title","children","className","defaultProps","ContactList","contacts","deleteContact","map","i","name","number","id","type","onClick","ContactForm","htmlFor","pattern","required","Component","Filter","action","App","state","contactId","visibleContacts","filter","contact","setState","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAKMA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,sBAAKC,UAAU,mBAAf,UACGF,GAAS,+BAAKA,EAAL,OAEV,8BAAMC,QASZF,EAAUI,aAAe,GAIVJ,QCnBTK,G,YAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,qBAAKJ,UAAU,qBAAf,SACE,6BACGG,EAASE,KAAI,WAAuBC,GAAvB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZ,qBAAYT,UAAU,mBAAtB,UACGO,EADH,IACUC,EACR,wBAAQE,KAAK,SAASC,QAAS,kBAAMP,EAAcK,IAAnD,sBAFOH,YAgBnBJ,EAAYD,aAAe,GAIZC,QCzBTU,E,4JACJ,WACE,OACE,qBAAKZ,UAAU,qBAAf,SACE,iCACE,4BACE,wBAAOa,QAAQ,GAAf,iBAEE,uBACEH,KAAK,OACLH,KAAK,OACLO,QAAQ,yHACRhB,MAAM,kcACNiB,UAAQ,SAId,4BACE,wBAAOF,QAAQ,GAAf,kBAEE,uBACEH,KAAK,MACLH,KAAK,SACLO,QAAQ,yFACRhB,MAAM,giBACNiB,UAAQ,SAId,kD,GA7BgBC,aAwC1BJ,EAAYX,aAAe,GAIZW,QC5CTK,E,4JACJ,WACE,OACE,sBAAKjB,UAAU,gBAAf,iCAEE,sBAAMkB,OAAO,GAAb,SACE,uBAAOL,QAAQ,GAAf,SACE,uBAAOH,KAAK,oB,GAPHM,aAmBrBC,EAAOhB,aAAe,GAIPgB,QCsBAE,E,4MArCbC,MAAQ,CACNjB,SAAU,CACR,CAAEM,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAEhDD,KAAM,GACNC,OAAQ,I,EAGVJ,cAAgB,SAAAiB,GACd,IACMC,EADQ,EAAKF,MACWjB,SAASoB,QACrC,SAAAC,GAAO,OAAIA,EAAQf,KAAOY,KAG5B,OADA,EAAKI,SAAS,CAAEtB,SAAUmB,IACnBA,G,4CAET,WACE,MAAmCI,KAAKN,MAAhCjB,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,OACxB,OACE,qBAAKR,UAAU,MAAf,SACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAaO,KAAMA,EAAMC,OAAQA,IAEjC,0CACA,cAAC,EAAD,IAEA,cAAC,EAAD,CAAaL,SAAUA,EAAUC,cAAesB,KAAKtB,yB,GA/B7CY,aCLlBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a0901f2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n//styles\nimport './Container.css';\n\nconst Container = ({ title, children }) => {\n  return (\n    <div className=\"ContainerWrapper\">\n      {title && <h1>{title} </h1>}\n\n      <div>{children}</div>\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nContainer.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Container;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport './ContactList.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <div className=\"ContactListWrapper\">\n      <ol>\n        {contacts.map(({ name, number, id }, i) => (\n          <li key={i} className=\"ContactList_item\">\n            {name} {number}\n            <button type=\"button\" onClick={() => deleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  // bla: PropTypes.string,\n};\n\nContactList.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './ContactForm.css';\n\nclass ContactForm extends Component {\n  render() {\n    return (\n      <div className=\"ContactFormWrapper\">\n        <form>\n          <p>\n            <label htmlFor=\"\">\n              Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"\">\n              Phone\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n              />\n            </label>\n          </p>\n          <button>Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  // bla: PropTypes.string,\n};\n\nContactForm.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ContactForm;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n//import { Test } from './Filter.styles';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <div className=\"FilterWrapper\">\n        Find contact by name\n        <form action=\"\">\n          <label htmlFor=\"\">\n            <input type=\"text\" />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  // bla: PropTypes.string,\n};\n\nFilter.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport Container from 'components/Container/Container';\n//styles\nimport './App.css';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n//components\n\n//file\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n  };\n\n  deleteContact = contactId => {\n    const state = this.state;\n    const visibleContacts = state.contacts.filter(\n      contact => contact.id !== contactId,\n    );\n    this.setState({ contacts: visibleContacts });\n    return visibleContacts;\n  };\n  render() {\n    const { contacts, name, number } = this.state;\n    return (\n      <div className=\"App\">\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm name={name} number={number} />\n\n          <h2>Contacts</h2>\n          <Filter />\n\n          <ContactList contacts={contacts} deleteContact={this.deleteContact} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}