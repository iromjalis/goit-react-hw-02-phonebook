{"version":3,"sources":["components/Container/Container.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","title","children","className","defaultProps","ContactList","contacts","deleteContact","map","i","name","number","id","type","onClick","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","onChange","pattern","required","Component","Filter","handleFilter","onFilter","filter","action","App","contactId","visibleContacts","contact","addNewContact","data","shortid","generate","some","alert","console","log","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d66a25.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n//styles\nimport './Container.css';\n\nconst Container = ({ title, children }) => {\n  return (\n    <div className=\"ContainerWrapper\">\n      {title && <h1>{title} </h1>}\n\n      <div>{children}</div>\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nContainer.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Container;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport './ContactList.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <div className=\"ContactListWrapper\">\n      <ol>\n        {contacts.map(({ name, number, id }, i) => (\n          <li key={i} className=\"ContactList_item\">\n            {name} {number}\n            <button type=\"button\" onClick={() => deleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  // bla: PropTypes.string,\n};\n\nContactList.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className=\"ContactFormWrapper\">\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <label htmlFor=\"\">\n              Name&emsp;\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"\">\n              Phone&emsp;\n              <input\n                onChange={this.handleChange}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n              />\n            </label>\n          </p>\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n//import { Test } from './Filter.styles';\n\nclass Filter extends Component {\n  handleFilter = e => {\n    this.props.onFilter(e.currentTarget.value);\n  };\n  render() {\n    const { filter } = this.props;\n    return (\n      <div className=\"FilterWrapper\">\n        Find contact by name\n        <form action=\"\">\n          <label htmlFor=\"\">\n            <input\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={this.handleFilter}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  // bla: PropTypes.string,\n};\n\nFilter.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport Container from 'components/Container/Container';\n//styles\nimport './App.css';\n//components\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\n//helpers\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContact = contactId => {\n    const state = this.state;\n    const visibleContacts = state.contacts.filter(\n      contact => contact.id !== contactId,\n    );\n    this.setState({ contacts: visibleContacts });\n    return visibleContacts;\n  };\n\n  addNewContact = data => {\n    const { contacts } = this.state;\n    const { name, number } = data;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.some(({ name }) => name === contact.name)) {\n      alert(`Sorry, ${name} already exists`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  onFilter = filter => {\n    console.log('filter', filter);\n    this.setState({ filter });\n  };\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return (\n      <div className=\"App\">\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addNewContact} />\n\n          <h2>Contacts</h2>\n          <Filter filter={filter} onFilter={this.onFilter} />\n\n          <ContactList\n            contacts={visibleContacts}\n            deleteContact={this.deleteContact}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}